package philips.healthcare.radar.rules.mrpostprocessrules;

import philips.healthcare.radar.rules.mrpostprocessrules.MRMeasurementDataModel;

rule "Connectivity Rule Severity High"
no-loop true
	when 
		$MRMeasurementDataModel: MRMeasurementDataModel(numberDaysWithoutConnection >10)
	then
		System.out.println("Connectivity Rule Severity High");
		$MRMeasurementDataModel.setConnectivitySeverity("High");
		//update($MRMeasurementDataModel)
end

rule "Connectivity Rule Severity Medium"
no-loop true
	when
		$MRMeasurementDataModel: MRMeasurementDataModel(numberDaysWithoutConnection >= 4 && numberDaysWithoutConnection <= 10 )
	then
		System.out.println("Connectivity Rule Severity Medium");
		$MRMeasurementDataModel.setConnectivitySeverity("Medium");
		//update($MRMeasurementDataModel)
end

rule "Connectivity Rule Severity None"
no-loop true
	when
		$MRMeasurementDataModel: MRMeasurementDataModel(numberDaysWithoutConnection < 3)
	then		
		System.out.println("Connectivity Rule Severity None");
		$MRMeasurementDataModel.setConnectivitySeverity("None");
		//update($MRMeasurementDataModel);
end

rule "Helium level rule Severity High"
no-loop true
	when
		$MRMeasurementDataModel: MRMeasurementDataModel(heliumLevel < 35 	|| heliumBoilOff > 0.9)
	then
	System.out.println("Helium level rule Severity High");
	$MRMeasurementDataModel.setHeliumSeverity("High");
	//update($MRMeasurementDataModel);
end

rule "Helium level rule Severity Medium"
no-loop true
	when
		$MRMeasurementDataModel: MRMeasurementDataModel(heliumLevel >= 35 && heliumLevel <= 45 )
	then
	System.out.println("Helium level rule Severity Medium");
	$MRMeasurementDataModel.setHeliumSeverity("Medium");
	//update($MRMeasurementDataModel);
end

rule "Boil-off Rule Severity High for Titan magnet type"
no-loop true
	when
	$MRMeasurementDataModel: MRMeasurementDataModel(deviceConfig.magnetType == "Titan" && longTermBoilOffMlPerHr> 250 )
	then
	System.out.println("Boil-off Rule Severity High for Titan magnet type");
	$MRMeasurementDataModel.setHeliumSeverity("High");
	//update($MRMeasurementDataModel);
end

rule "Boil-off Rule Severity Medium for Titan magnet type"
no-loop true
	when
	$MRMeasurementDataModel: MRMeasurementDataModel(deviceConfig.magnetType == "Titan" && longTermBoilOffMlPerHr>=200 && longTermBoilOffMlPerHr<= 200)
	then
	System.out.println("Boil-off Rule Severity Medium for Titan magnet type");
	$MRMeasurementDataModel.setHeliumSeverity("Medium");
	//update($MRMeasurementDataModel);
end

rule "Boil-off Rule Severity High for F2000 magnet type"
no-loop true
	when
	$MRMeasurementDataModel: MRMeasurementDataModel(deviceConfig.magnetType == 	"F2000" && longTermBoilOffMlPerHr> 150 )
	then
	System.out.println("Boil-off Rule Severity High for F2000 magnet type");
	$MRMeasurementDataModel.setHeliumSeverity("High");
	//update($MRMeasurementDataModel);
end

rule "Boil-off Rule Severity Medium for F2000 magnet type"
no-loop true
	when
	$MRMeasurementDataModel: MRMeasurementDataModel(deviceConfig.magnetType == 	"F2000" && longTermBoilOffMlPerHr>= 100 && longTermBoilOffMlPerHr<= 150 )
	then
	System.out.println("Boil-off Rule Severity Medium for F2000 magnet type");
	$MRMeasurementDataModel.setHeliumSeverity("Medium");
	//update($MRMeasurementDataModel);
end

rule "Boil-off Rule Severity High for REX magnet type"
no-loop true
	when
	$MRMeasurementDataModel: MRMeasurementDataModel(deviceConfig.magnetType == 	"REX" && longTermBoilOffMlPerHr> 50 )
	then
	System.out.println("Boil-off Rule Severity High for REX magnet type");
	$MRMeasurementDataModel.setHeliumSeverity("High");
	//update($MRMeasurementDataModel);
end

rule "Boil-off Rule Severity Medium for REX magnet type"
no-loop true
	when
	$MRMeasurementDataModel: MRMeasurementDataModel(deviceConfig.magnetType == 	"REX" && longTermBoilOffMlPerHr> 20 && longTermBoilOffMlPerHr<= 50)
	then
	System.out.println("Boil-off Rule Severity Medium for REX magnet type");
	$MRMeasurementDataModel.setHeliumSeverity("Medium");
	//update($MRMeasurementDataModel);
end

rule "Boil-off Rule Severity High for HFO magnet type"
no-loop true
	when
	$MRMeasurementDataModel: MRMeasurementDataModel(deviceConfig.magnetType == 	"HFO" && longTermBoilOffMlPerHr> 50)
	then
	System.out.println("Boil-off Rule Severity High for HFO magnet type");
	$MRMeasurementDataModel.setHeliumSeverity("High");
	//update($MRMeasurementDataModel);
end

rule "Boil-off Rule Severity Medium for HFO magnet type"
no-loop true
	when
	$MRMeasurementDataModel: MRMeasurementDataModel(deviceConfig.magnetType == 	"HFO" && longTermBoilOffMlPerHr> 20 && longTermBoilOffMlPerHr<= 50)
	then
	System.out.println("Boil-off Rule Severity Medium for HFO magnet type");
	$MRMeasurementDataModel.setHeliumSeverity("Medium");
	//update($MRMeasurementDataModel);
end

rule "Boil-off Rule Severity High for WA30T magnet type"
no-loop true
	when
	$MRMeasurementDataModel: MRMeasurementDataModel(deviceConfig.magnetType == 	"WA_30T" && longTermBoilOffMlPerHr> 50)
	then
	System.out.println("Boil-off Rule Severity High for WA30T magnet type");
	$MRMeasurementDataModel.setHeliumSeverity("High");
	//update($MRMeasurementDataModel);
end

rule "Boil-off Rule Severity Medium for WA30T magnet type"
no-loop true
	when
	$MRMeasurementDataModel: MRMeasurementDataModel(deviceConfig.magnetType == 	"WA_30T" && longTermBoilOffMlPerHr> 20 && longTermBoilOffMlPerHr<= 50)
	then
	System.out.println("Boil-off Rule Severity Medium for WA30T magnet type");
	$MRMeasurementDataModel.setHeliumSeverity("Medium");
	//update($MRMeasurementDataModel);
end

rule "Boil-off Rule Severity High for WA15T magnet type"
no-loop true
	when
	$MRMeasurementDataModel: MRMeasurementDataModel(deviceConfig.magnetType == 	"WA_15T" && longTermBoilOffMlPerHr > 50)
	then
	System.out.println("Boil-off Rule Severity High for WA15T magnet type");
	$MRMeasurementDataModel.setHeliumSeverity("High");
	//update($MRMeasurementDataModel);
end

rule "Boil-off Rule Severity Medium for WA15T magnet type"
no-loop true
	when
	$MRMeasurementDataModel: MRMeasurementDataModel(deviceConfig.magnetType == 	"WA_15T" && longTermBoilOffMlPerHr > 20 && longTermBoilOffMlPerHr <= 50)
	then
	System.out.println("Boil-off Rule Severity Medium for WA15T magnet type");
	$MRMeasurementDataModel.setHeliumSeverity("Medium");
	//update($MRMeasurementDataModel);
end

rule "Helium 4k magnet pressure rule severity high"
no-loop true
	when
	$MRMeasurementDataModel: MRMeasurementDataModel(deviceConfig.magnetTypeCategory == 	"4K" && (heliumPressure > 100 || heliumPressure < 26))
	then
	System.out.println("Helium 4k magnet pressure rule severity high");
	$MRMeasurementDataModel.setHeliumSeverity("High");
	$MRMeasurementDataModel.setHeliumPressureSeverity("High");
	//update($MRMeasurementDataModel);
end

rule "Helium 10k magnet pressure rule severity high"
no-loop true
	when
	$MRMeasurementDataModel: MRMeasurementDataModel(deviceConfig.magnetTypeCategory == 	"10K" && (heliumPressure > 120 || heliumPressure < 40))
	then
	System.out.println("Helium 10k magnet pressure rule severity high");
	$MRMeasurementDataModel.setHeliumSeverity("High");
	$MRMeasurementDataModel.setHeliumPressureSeverity("High");
	//update($MRMeasurementDataModel);
end

rule "Helium 4k magnet pressure rule severity medium"
no-loop true
	when
	$MRMeasurementDataModel: MRMeasurementDataModel(deviceConfig.magnetTypeCategory == 	"4K" && (heliumPressure >= 37 && heliumPressure <= 100))
	then
	System.out.println("Helium 4k magnet pressure rule severity medium");
	$MRMeasurementDataModel.setHeliumSeverity("Medium");
	$MRMeasurementDataModel.setHeliumPressureSeverity("Medium");
	//update($MRMeasurementDataModel);
end

rule "Helium 10k magnet pressure rule severity medium"
no-loop true
	when
	$MRMeasurementDataModel: MRMeasurementDataModel(deviceConfig.magnetTypeCategory == 	"4K" && ( (heliumPressure >= 100 && heliumPressure <= 120) || (heliumPressure >= 40 && heliumPressure <= 50) ))
	then
	System.out.println("Helium 10k magnet pressure rule severity medium");
	$MRMeasurementDataModel.setHeliumSeverity("Medium");
	$MRMeasurementDataModel.setHeliumPressureSeverity("Medium");
	//update($MRMeasurementDataModel);
end

rule "Performance Rule Severity High"
no-loop true
	when
	$MRMeasurementDataModel: MRMeasurementDataModel(specificationIndexIsOutOfSpec == true)
	then
	System.out.println("Performance Rule Severity High");
	$MRMeasurementDataModel.setPerformanceDataSeverity(true);
end

rule "Performance Rule Severity None"
no-loop true
	when
	$MRMeasurementDataModel: MRMeasurementDataModel(specificationIndexIsOutOfSpec == false)
	then
	System.out.println("Performance Rule Severity None");
	$MRMeasurementDataModel.setPerformanceDataSeverity(false);
end

rule "HW/SW Errors Rule Severity High"
no-loop true
	when
	$MRMeasurementDataModel: MRMeasurementDataModel(MTBC > 15 && MTBC < 40)
	then
	System.out.println("HW/SW Errors Rule Severity High");
	$MRMeasurementDataModel.setHardwareSoftwareDataSeverity(true);
end

rule "HW/SW Errors Rule Severity None"
no-loop true
	when
	$MRMeasurementDataModel: MRMeasurementDataModel(MTBC <= 15 && MTBC >= 40)
	then
	System.out.println("HW/SW Errors Rule Severity None");
	$MRMeasurementDataModel.setHardwareSoftwareDataSeverity(false);
end

rule "Cooling Rule Severity High"
no-loop true
	when
	$MRMeasurementDataModel: MRMeasurementDataModel(coolingHoursOutOfSpec > 10)
	then
	System.out.println("Cooling Rule Severity High");
	$MRMeasurementDataModel.setCoolingSeverity("High");
end

rule "Cooling Rule Severity None"
no-loop true
	when
	$MRMeasurementDataModel: MRMeasurementDataModel(coolingHoursOutOfSpec <= 10)
	then
	System.out.println("Cooling Rule Severity None");
	$MRMeasurementDataModel.setCoolingSeverity("None");
end

rule "Climate Rule Severity High"
no-loop true
	when
	$MRMeasurementDataModel: MRMeasurementDataModel(climateHoursOutOfSpec > 1)
	then
	System.out.println("Climate Rule Severity High");
	$MRMeasurementDataModel.setClimateSeverity("high");
end

rule "Climate Rule Severity None"
no-loop true
	when
	$MRMeasurementDataModel: MRMeasurementDataModel(climateHoursOutOfSpec <= 1)
	then
	System.out.println("Climate Rule Severity None");
	$MRMeasurementDataModel.setClimateSeverity("None");
end

rule "IQT Quality Assurance High"
no-loop true
	when
	$MRMeasurementDataModel: MRMeasurementDataModel(IQTQualityAssuranceOutOfSpec > 0)
	then
	System.out.println("IQT Quality Assurance High");
	$MRMeasurementDataModel.setIQTQualityAssuranceSeverity("High");
end

rule "IQT Quality Assurance None"
no-loop true
	when
$MRMeasurementDataModel: MRMeasurementDataModel(IQTQualityAssuranceOutOfSpec == 0)
	then
	System.out.println("IQT Quality Assurance None");
	$MRMeasurementDataModel.setIQTQualityAssuranceSeverity("None");
end